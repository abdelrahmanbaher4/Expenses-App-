{"version":3,"sources":["components/UI/Card.js","components/NewExpense/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","amount","title","ExpensesList","filteredExpenses","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","datapoints","totalMax","max","dataPoint","datapoint","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filter","toString","selectedYear","ExpenseForm","EnteredTitle","setTitle","EnteredAmount","setAmount","EnteredDate","setDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEdititng","setisEdititng","enteredExpenseData","random","console","log","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpense","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.7cc154b9.chunk.js","sourcesContent":["import \"./Card.css\";\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\nexport default Card;\r\n","import \"./ExpenseFilter.css\";\r\n\r\nconst ExpenseFilter = (props) => {\r\n  const onSelectYear = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={onSelectYear}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseFilter;\r\n","import \"./ExpenseDate.css\";\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date \">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default ExpenseDate;\r\n","import \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nconst ExpenseItem = (props) => {\r\n  const { amount, date, title } = props;\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={date} />\r\n        <h2 className=\"expense-item__description\">{title}</h2>\r\n        <div className=\"expense-item__price\">${amount}</div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\nconst ExpensesList = (props) => {\r\n  const { filteredExpenses } = props;\r\n  if (filteredExpenses.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No Expenses Found!!</h2>;\r\n  }\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {filteredExpenses.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default ExpensesList;\r\n","import \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default ChartBar;\r\n","import ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\nconst Chart = (props) => {\r\n  const { datapoints } = props;\r\n  const totalMax = Math.max(...datapoints.map((dataPoint) => dataPoint.value));\r\n  return (\r\n    <div className=\"chart\">\r\n      {datapoints.map((datapoint) => (\r\n        <ChartBar\r\n          key={datapoint.label}\r\n          value={datapoint.value}\r\n          maxValue={totalMax}\r\n          label={datapoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n  return <Chart datapoints={chartDataPoints} />;\r\n};\r\nexport default ExpensesChart;\r\n","import \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseFilter from \"../NewExpense/ExpenseFilter\";\r\nimport { useState } from \"react\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n  const { expenses } = props;\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  const filteredExpenses = expenses.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  }); //filter returns a brand new array\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpenseFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList filteredExpenses={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default Expenses;\r\n\r\n// eslint-disable-next-line no-lone-blocks\r\n{\r\n  /* {filteredExpenses.length === 0 && <p>No Expenses found</p>}\r\n        {filteredExpenses.length > 0 &&\r\n          filteredExpenses.map((expense) => (\r\n            <ExpenseItem\r\n              key={expense.id}\r\n              title={expense.title}\r\n              amount={expense.amount}\r\n              date={expense.date}\r\n            />\r\n          ))} */\r\n}\r\n// eslint-disable-next-line no-lone-blocks\r\n{\r\n  /* {filteredExpenses.length === 0 ? (\r\n          <p>No Expenses found</p>\r\n        ) : (\r\n          filteredExpenses.map((expense) => (\r\n            <ExpenseItem\r\n              key={expense.id}\r\n              title={expense.title}\r\n              amount={expense.amount}\r\n              date={expense.date}\r\n            />\r\n          ))\r\n        )} */\r\n}\r\n","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\nconst ExpenseForm = (props) => {\r\n  // handling multiple states\r\n  const [EnteredTitle, setTitle] = useState(\"\");\r\n  const [EnteredAmount, setAmount] = useState(\"\");\r\n  const [EnteredDate, setDate] = useState(\"\");\r\n\r\n  const TitleChangeHandler = (event) => {\r\n    setTitle(event.target.value);\r\n  };\r\n  const AmountChangeHandler = (event) => {\r\n    setAmount(event.target.value);\r\n  };\r\n  const DateChangeHandler = (event) => {\r\n    setDate(event.target.value);\r\n  };\r\n  const SubmitHandler = (event) => {\r\n    event.preventDefault(); // preventing page reload\r\n    const expenseData = {\r\n      title: EnteredTitle,\r\n      amount: +EnteredAmount,\r\n      date: new Date(EnteredDate),\r\n    };\r\n    //console.log(expenseData);\r\n    props.onSaveExpenseData(expenseData);\r\n    setTitle(\"\");\r\n    setAmount(\"\");\r\n    setDate(\"\");\r\n  };\r\n  /* // doing it in only 1 state \r\n    const [userInput, setUserInput] = useState({\r\n    Title: \"\",\r\n    Amount: \"\",\r\n    Date: \"\",\r\n    });\r\nconst TitleChangeHandler = (event) => {\r\n    setUserInput({\r\n      ...userInput,\r\n      Title: event.target.value,\r\n    });\r\n  };\r\n\r\n\r\n  const AmountChangeHandler = (event) => {\r\n    setUserInput({\r\n      ...userInput,\r\n      Amount: event.target.value,\r\n    });\r\n  };\r\n\r\n  const DateChangeHandler = (event) => {\r\n    setUserInput({\r\n      ...userInput,\r\n      Date: event.target.value,\r\n    });\r\n  };\r\n*/\r\n\r\n  //if state depends on other state :-\r\n  /*\r\n    const TitleChangeHandler = (event) => {\r\n        setUserInput((prevState)=>{\r\n            return {...prevState,Title:event.target.value} //overwrite also\r\n        });\r\n    };\r\n  */\r\n\r\n  return (\r\n    <form onSubmit={SubmitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control \">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={EnteredTitle}\r\n            onChange={TitleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control \">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            value={EnteredAmount}\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={AmountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control \">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={EnteredDate}\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={DateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default ExpenseForm;\r\n","import ExpenseForm from \"./ExpenseForm\";\r\nimport { useState } from \"react\";\r\nimport \"./NewExpense.css\";\r\nconst NewExpense = (props) => {\r\n  const [isEdititng, setisEdititng] = useState(false);\r\n  const SaveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    console.log(expenseData);\r\n    props.onAddExpense(expenseData);\r\n  };\r\n  const startEditingHandler = () => {\r\n    setisEdititng(true);\r\n  };\r\n  const stopEditingHandler = (event) => {\r\n    setisEdititng(false);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEdititng && (\r\n        <button onClick={startEditingHandler}> Add New Expense</button>\r\n      )}\r\n      {isEdititng && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={SaveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \" Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nfunction App() {\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpense) => {\n      return [expense, ...prevExpense];\n    });\n  };\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n// should be called after render\n"],"sourceRoot":""}